{"version":3,"sources":["webpack:///webpack/bootstrap a36386f663a7ecc9ea37","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/suduku.js","webpack:///./js/core/generator.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupnumbers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,M;AACA,GAAE;AACF,+B;AACA;AACA,EAAC;AACD;AACA;AACA,GAAE;AACF,iC;AACA;AACA,EAAC;;;;;;;ACxBD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,M;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM;AACxC,8CAA6C,QAAQ;AACrD,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,sB;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4BAA2B,YAAY;AACvC,MAAK;;AAEL;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACtEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,E;;;;;;ACtBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA,gCAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA,gCAA+B,aAAa;AAC5C;AACA;AACA;AACA,gCAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA,sBAAqB,KAAK;AAC1B,qBAAoB,IAAI;AACxB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a36386f663a7ecc9ea37","const Grid = require(\"./ui/grid\")\nconst PopupNumbers = require(\"./ui/popupnumbers\")\n\n\nconst grid = new Grid($(\"#container\"))\ngrid.build()\ngrid.layout()\n\nconst popupnumbers = new PopupNumbers($(\"#popupNumbers\"))\ngrid.bindPopup(popupnumbers)\n\n$(\"#check\").on(\"click\", e => {\n    if(grid.check()){\n        alert(\"成功\")\n    }    \n })\n$(\"#reset\").on(\"click\", e => { \n        grid.reset()\n})\n$(\"#clear\").on(\"click\", e => {\n    grid.clear()\n })\n$(\"#rebuild\").on(\"click\", e => { \n    grid.rebuild()\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","// 生成九宫格\nconst Toolkit = require(\"../core/toolkit\")\nconst Sudoku = require(\"../core/suduku\")\nconst Checker = require(\"../core/checker\")\n\nclass Grid {\n    constructor(container){\n        this._$container = container;\n    }\n\n    build(){\n        // const generator = new Generator()\n        // generator.generate()\n        // const matrix = generator.matrix\n        const suduku = new Sudoku()\n        suduku.make()\n        const matrix = suduku.puzzleMatrix\n        const rowGroupClass = [\"row_g_top\", \"row_g_middle\", \"row_g_bottom\"]\n        const colGroupClass = [\"col_g_left\", \"col_g_center\", \"col_g_right\"]\n\n        const $cells = matrix.map(rowValues => rowValues.map((cellValue, colIndex) => {\n            return $(\"<span>\")\n                .addClass(colGroupClass[colIndex % 3])\n                .addClass(cellValue?\"fixed\": \"empty\")\n                .text(cellValue)\n        }))\n\n        const $divArray = $cells.map(($spanArray, rowIndex) => {\n            return $(\"<div>\")\n                .addClass(\"row\")\n                .addClass(rowGroupClass[rowIndex % 3])\n                .append($spanArray)\n        })\n\n        this._$container.append($divArray)\n    } \n\n    check(){\n        const $rows = this._$container.children()\n        const data = $rows\n            .map((rowIndex, div) => {\n            return $(div).children()\n                .map((colIndex, span) => parseInt($(span).text()) || 0)\n            })\n            .toArray()\n            .map($data => $data.toArray())\n\n        const checker = new Checker(data)\n        if(checker.check()){\n            return true\n        }\n\n        // 检查不成功进行标记\n        const marks = checker.matrixMarks\n        this._$container.children()\n            .each((rowIndex, div)=>{\n                $(div).children().each((colIndex, span)=>{\n                    const $span = $(span)\n                    if($span.is(\".fixed\") || marks[rowIndex][colIndex]){\n                        $span.removeClass(\"error\")\n                    }else{\n                        $(span).addClass(\"error\")\n                    }\n                })\n            })\n    }\n\n    reset(){\n        this._$container.find(\"span:not(.fixed)\")\n            .removeClass(\"error mark1 mark2\")\n            .addClass(\"empty\")\n            .text(0)\n    }\n\n    clear(){\n        this._$container.find(\"span.error\")\n            .removeClass(\"error\")\n    }\n\n    rebuild(){\n        this._$container.empty()\n        this.build()\n        this.layout()\n    }\n\n    layout() {\n        const width = $(\"span:first\", this._$container).width()\n        $(\"span\", this._$container)\n            .height(width)\n            .css({\n                \"line-height\": `${width}px`,\n                \"font-size\": width < 32 ? `${width/2}px` : \"\"\n            })\n    }\n\n    bindPopup(popupNumbers){\n        this._$container.on(\"click\", \"span\", e => {\n            const $cell = $(e.target)\n            if($cell.is(\".fixed\")){\n                return\n            }\n            popupNumbers.popup($cell )\n        })\n    }\n}\n\nmodule.exports = Grid\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","// matrix and array tools\nconst matrixToolkit = {\n    makeRow(v = 0) {\n        const array = new Array(9)\n        array.fill(v)\n        return array\n    },\n\n    makeMatrix(v = 0) {\n        return Array.from({ length: 9 }, () => this.makeRow(v))\n    },\n\n    // Fisher-Yates 洗牌算法\n    shuffle(array) {\n        const endIndex = array.length - 2\n        for (let i = 0; i <= endIndex; i++) {\n            const j = i + Math.floor(Math.random() * (array.length - i));\n            [array[i], array[j]] = [array[j], array[i]]\n        }\n        return array\n    },\n\n    checkFillable(matrix, n, rowIndex, colIndex) {\n        const row = matrix[rowIndex];\n        const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\n        const { boxIndex } = boxToolkit.convertToBoxIndex(rowIndex, colIndex);\n        //宫\n        const box = boxToolkit.getBoxCells(matrix, boxIndex);\n        for (let i = 0; i < 9; i++) {\n            if (row[i] === n || column[i] === n || box[i] === n)\n                return false;\n        }\n        return true;\n    }\n}\n\n//Grid Axis\nconst boxToolkit = {\n    getBoxCells(matrix, boxIndex) {\n        const startRowIndex = Math.floor(boxIndex / 3) * 3;\n        const startColIndex = boxIndex % 3 * 3;\n        const result = [];\n        for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\n            const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\n            const colIndex = startColIndex + cellIndex % 3;\n            result.push(matrix[rowIndex][colIndex]);\n        }\n        return result;\n    },\n    convertToBoxIndex(rowIndex, colIndex) {\n        return {\n            boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\n            cellIndex: rowIndex % 3 * 3 + colIndex % 3\n        };\n    },\n    convertFromBoxIndex(boxIndex, cellIndex) {\n        return {\n            rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\n            colIndex: boxIndex % 3 * 3 + cellIndex % 3\n        };\n    }\n}\n\nmodule.exports = class Toolkit {\n    static get matrix() {\n        return matrixToolkit\n    }\n    static get box() {\n        return boxToolkit\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","// 生成数独游戏\n\n// 1. 生成完成对解决方案: Generator\n// 2. 随机去除部分数据： 按比例\n\nconst Generator = require('./generator')\n\nmodule.exports = class Sudoku {\n    constructor(){\n        const generator = new Generator()\n        generator.generate()\n        this.solutionMatrix = generator.matrix\n    }\n\n    make(level = 5){\n        // const shouldRid = Math.random() * 9 < level\n        // 生成迷盘\n        this.puzzleMatrix = this.solutionMatrix.map(row => {\n            return row.map(cell =>  Math.random() * 9 < level ? 0 : cell)\n        })\n\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/suduku.js\n// module id = 3\n// module chunks = 0","// 生成数独解决方案\nconst Toolkit = require(\"./toolkit\")\n\nmodule.exports = class Generator {\n\n    generate(){\n        while(!this.internalGenerate()){\n            console.warn(\"try again\")\n        }\n    }\n\n    internalGenerate() {\n        this.matrix = Toolkit.matrix.makeMatrix()\n        this.orders = Toolkit.matrix.makeMatrix()\n            .map(row => row.map((v, i) => i))\n            .map(row => Toolkit.matrix.shuffle(row))\n\n        Toolkit.matrix.makeRow()\n        for (let n = 1; n <= 9; n++) {\n            if(!this.fillNumber(n)){\n                return false\n            }\n        }\n        return true\n    }\n    fillNumber(n) {\n        return this.fillRow(n, 0)\n    }\n    //递归\n    fillRow(n, rowIndex) {\n        if (rowIndex > 8) {\n            return true;\n        }\n        //行数据\n        const row = this.matrix[rowIndex];\n        //选择填写位置\n        const orders = this.orders[rowIndex];\n        for (let i = 0; i < 9; i++) {\n            //判断数据 如果此位置已有值，跳过\n            const colIndex = orders[i];\n            if (row[colIndex]) {\n                continue;\n            }\n            //检查此位置是否能填\n            if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\n                continue;\n            }\n            row[colIndex] = n;\n            //去下一行填写n 如果填写失败则继续寻找当前行下一个位置\n            if (!this.fillRow(n, rowIndex + 1)) {\n                row[colIndex] = 0;\n                continue;\n            }\n            return true;\n        }\n        return false;\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 4\n// module chunks = 0","// //检查数独解决方案\nfunction checkArray(array){\n    const length = array.length;\n    //定义标记\n    const marks = new Array(length);\n    marks.fill(true);\n    for (let i=0;i < length-1;i++){\n        if(!marks[i]){\n            continue;\n        }\n        const v = array[i];\n        //是否有效，0表示无效，1-9 有效\n        if(!v){\n            marks[i] = false;\n            continue;\n        }\n        //是否有重复 i+1=>9 是否有与位置i重复的数据\n        for( let j=i+1;j<length;j++){\n            if(v===array[j]){\n                marks[i] = marks[j] = false;\n            }\n        }\n    }\n    return marks;\n}\n// // console.log(checkArray([1,2,3,4,5,6,7,8,9]));\n// // console.log(checkArray([1,2,3,4,0,6,7,8,9]));\n// // console.log(checkArray([1,2,3,4,6,7,7,9,2]));\nconst Toolkit = require(\"./toolkit\");\n//输入：matrix 用户完成的数独数据，9*9\n//处理：对matrix 行、列、宫进行检查，并填写marks\n//输出：检查是否成功、marks\nclass Checker{\n    constructor(matrix){\n        this._matrix = matrix;\n        this._matrixMarks = Toolkit.matrix.makeMatrix(true);\n    }\n\n    get matrixMarks(){\n        return this._matrixMarks;\n    }\n\n    get isSuccess(){\n        return this._success;\n    }\n\n    check(){\n        this.checkRows();\n        this.checkCols();\n        this.checkBoxes();\n        //检查是否成功\n        //Array.prototype.every()\n        this._success = this._matrixMarks.every(row => row.every(mark => mark))\n        return this._success;\n    }\n    checkRows(){\n        for(let rowIndex=0;rowIndex < 9;rowIndex++){\n            const row = this._matrix[rowIndex];\n            const marks = checkArray(row);\n            for(let colIndex=0;colIndex < marks.length;colIndex++){\n                if(!marks[colIndex]){\n                    this._matrixMarks[rowIndex][colIndex] =false;\n                }\n            }\n        }\n    }\n    checkCols(){\n        for(let colIndex=0;colIndex < 9;colIndex++){\n            const cols = [];\n            for(let rowIndex=0;rowIndex < 9;rowIndex++){\n                cols[rowIndex]= this._matrix[rowIndex][colIndex];\n            }\n            const marks = checkArray(cols);\n            for(let rowIndex=0;rowIndex < marks.length;rowIndex++){\n                if(!marks[rowIndex]){\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n    checkBoxes(){\n        for(let boxIndex=0;boxIndex < 9;boxIndex++){\n            const boxes = Toolkit.box.getBoxCells(this._matrix,boxIndex);\n            const marks = checkArray(boxes);\n            for(let cellIndex=0;cellIndex < 9;cellIndex++){\n                if(!marks[cellIndex]){\n                    const {rowIndex,colIndex}= Toolkit.box.convertFromBoxIndex(boxIndex,cellIndex);\n                    this.matrixMarks[rowIndex][colIndex] =false;\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = Checker\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/checker.js\n// module id = 5\n// module chunks = 0","// 处理弹出的操作面板\nmodule.exports = class PopupNumbers {\n    constructor($panel) {\n        this._$panel = $panel.hide().removeClass(\"hidden\")\n        this._$panel.on(\"click\", \"span\", e => {\n            const $cell = this._$targetCell;\n\n            const $span = $(e.target)\n            // 1-9 回填数字\n            if ($span.hasClass(\"mark1\")) {\n                if ($cell.hasClass(\"mark1\")) {\n                    $cell.removeClass(\"mark1\")\n                } else {\n                    $cell.removeClass(\"mark2\")\n                        .addClass(\"mark1\")\n                }\n\n            } else if ($span.hasClass(\"mark2\")) {\n                if ($cell.hasClass(\"mark2\")) {\n                    $cell.removeClass(\"mark2\")\n                } else {\n                    $cell.removeClass(\"mark1\")\n                        .addClass(\"mark2\")\n                }\n            } else if ($span.hasClass(\"empty\")) {\n                $cell.text(0)\n                    .addClass(\"empty\")\n\n            } else {\n                $cell.removeClass(\"empty\")\n                    .text($span.text())\n            }\n            this.hide()\n        })\n    }\n    popup($cell) {\n        this._$targetCell = $cell\n        const { left, top } = $cell.position()\n        this._$panel.css({\n            left: `${left}px`,\n            top: `${top}px`\n        })\n            .show()\n    }\n    hide() {\n        this._$panel.hide()\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}